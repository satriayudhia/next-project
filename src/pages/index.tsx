import { useEffect, useState } from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { useRouter } from "next/router";
import Image from "next/image";

export default function Home(props: any) {
  const { response } = props;
  const [categories, setCategories] = useState([]);
  const [category, setCategory] = useState(null);
  const [sortBy, setSortBy] = useState<"asc" | "desc" | null>(null);
  const [productList, setProductList] = useState(response.products);

  const router = useRouter();

  const getCategories = async () => {
    const response = await fetch("https://dummyjson.com/products/categories", {
      method: "GET",
    })
      .then((response) => response.json())
      .catch((err) => console.error(err));

    setCategories(response);
  };

  const getProductsByCategories = async (category: any) => {
    const order = sortBy ? `&order=${sortBy}` : "";
    const response = await fetch(
      `https://dummyjson.com/products/category/${category}?sortBy=price${order}`,
      {
        method: "GET",
      }
    )
      .then((response) => response.json())
      .catch((err) => console.error(err));

    setProductList(response.products);
  };

  const sortProductList = async (sortBy: string) => {
    let url = "https://dummyjson.com/products";
    if (category) {
      url = url + `/category/${category}`;
    }
    const response = await fetch(`${url}?sortBy=price&order=${sortBy}`, {
      method: "GET",
    })
      .then((response) => response.json())
      .catch((err) => console.error(err));

    setProductList(response.products);
  };

  useEffect(() => {
    getCategories();
  }, []);

  useEffect(() => {
    category && getProductsByCategories(category);
  }, [category]);

  useEffect(() => {
    sortBy && sortProductList(sortBy);
  }, [sortBy]);

  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <div>
            {categories?.map((item: any) => (
              <div
                onClick={() => setCategory(item.slug)}
                style={{
                  color: item.slug === category ? "#000" : "#fff",
                  display: "inline-flex",
                  flexWrap: "wrap",
                  marginRight: "20px",
                  marginBottom: "10px",
                  cursor: "pointer",
                  border:
                    item.slug === category
                      ? "1px solid #fff"
                      : "1px solid #fff",
                  background: item.slug === category ? "#fff" : "transparent",
                  padding: "4px",
                }}
                key={item.slug}
              >
                {item.name}
              </div>
            ))}
          </div>

          <div style={{ marginTop: "20px" }}>
            Sort by Price:{" "}
            <span
              style={{
                cursor: "pointer",
                fontWeight: sortBy === "asc" ? "bold" : "normal",
              }}
              onClick={() => setSortBy("asc")}
            >
              Ascending
            </span>
            <span> | </span>
            <span
              style={{
                cursor: "pointer",
                fontWeight: sortBy === "desc" ? "bold" : "normal",
              }}
              onClick={() => setSortBy("desc")}
            >
              Descending
            </span>
          </div>

          <div>
            {productList?.map((item: any) => (
              <div
                key={item.id}
                onClick={() => router.push(`/detail/${item.id}`)}
              >
                <Image
                  src={item.thumbnail}
                  alt={item.title}
                  width={300}
                  height={300}
                  fetchPriority="low"
                  sizes="50vw"
                  loading="lazy"
                />
                <div>{item.title}</div>
                <div>{item.description}</div>
                <div>{item.price}</div>
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps = async () => {
  const response = await fetch("https://dummyjson.com/products", {
    method: "GET",
  })
    .then((response) => response.json())
    .catch((err) => console.error(err));

  return {
    props: {
      response: JSON.parse(JSON.stringify(response)) || null,
    },
  };
};
